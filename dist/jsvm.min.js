!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.jsvm=e():t.jsvm=e()}(global,function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=2)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=n(1);e.default=class{constructor(t,e,n){return this.__type__="block",this.__variables__=new Map,this.__parent__=null,this.__function_parent__=null,this.__children__=[],"root"===t?(this.__type__=t,this.__variables__=new Map,this.__parent__=e,this):this.__create_child_scope__(t,e,n)}__create_child_scope__(t,e,n){const r=Object.create(e||null);return r.__type__=t,r.__variables__=new Map,r.__parent__=e,r.__function_parent__=null,r.__children__=n||[],r}__add_children__(t){t&&(Array.isArray(t)?this.__children__.push(...t):this.__children__.push(t))}__has_variable_in_chain__(t){return void 0!==this[t]}__has_variable__(t){return this.__variables__.has(t)}__get_dec_type__(t){return this[t].decType}__get__(t){const e=this[t];if(e)return e.value;throw new ReferenceError(`${t} is not defined`)}__set__(t,e){const n=this[t];if(n){if("const"===n.decType)throw new TypeError("Assignment to constant variable.");return n.value=e,n.value}throw new ReferenceError(`${t} is not defined`)}__remove__(t){return!!this[t]&&delete this[t]&&this.__variables__.delete(t)}var(t,e,n,r){this.__function_declaration__("var",t,e,n,r)}function(t,e,n,r){this.__function_declaration__("function",t,e,n,r)}let(t,e,n,r){this.__block_declaration__("let",t,e,n,r)}const(t,e,n){this.__block_declaration__("const",t,e,n)}__find_parent_function_scope__(t){if(t){const e=t.__parent__?t.__parent__.__type__:null;return"function"===e||"root"===e?t.__parent__||null:t.__find_parent_function_scope__(t.__parent__)}return null}__block_declaration__(t,e,n,i,a){if(this.__variables__.has(e))throw new SyntaxError(`Uncaught SyntaxError: Identifier '${e}' has already been declared`);const o={decType:t,value:n===r.default.NON_EXISTENT_INIT?void 0:n};this.__variables__.set(e,o);const s=this;let _=t=>{const n=s[e];return n.value=t,s.__variables__.set(e,n),a&&"function"==typeof a&&a(),n};return"const"===t&&(_=(t=>{throw new TypeError("Assignment to constant variable")})),Object.defineProperty(this,e,{configurable:!0,enumerable:!0,get:()=>(i&&"function"==typeof i&&i(),s.__variables__.get(e)),set:_}),o}__function_declaration__(t,e,n,i,a){const o=this.__variables__.get(e);if(o){const i=o.decType;if("let"===i||"const"===i)throw SyntaxError(`Uncaught SyntaxError: Identifier '${e}' has already been declared`);return n!==r.default.NON_EXISTENT_INIT&&(o.decType=t,o.value=n),o}if("function"===this.__type__||"root"===this.__type__){const o={decType:t,value:n===r.default.NON_EXISTENT_INIT?void 0:n};this.__variables__.set(e,o);const s=this;return Object.defineProperty(this,e,{configurable:!0,enumerable:!0,get:()=>(i&&"function"==typeof i&&i(),s.__variables__.get(e)),set(t){const n=s[e];return n.value=t,s.__variables__.set(e,n),a&&"function"==typeof a&&a(),n}}),o}if(this.__function_parent__||(this.__function_parent__=this.__find_parent_function_scope__(this)),this.__function_parent__){const r=this.__function_parent__.__function_declaration__(t,e,n,i,a);if(r)return this.__variables__.set(e,r),r;throw new Error("执行器内部错误，上层function作用域返回一个空的变量")}throw new Error(`执行器内部错误，无法找到一个合适的作用域声明${t}类型的变量`)}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default={NON_EXISTENT_INIT:{}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=n(0);e.Scope=r.default;const i=n(3);e.default=class extends i.default{constructor(t,e){super(),this.__context__=new r.default("root",null,[]),this.__callstack__=[],this.__context__.const("this",t),this.__inject_vars__=e,e&&this.inject(e),this.___inject_global_variable__()}init(t,e){this.__context__=new r.default("root",null,[]),this.__callstack__=[],this.__context__.const("this",t),e&&Object.keys(e).forEach(t=>this.__context__.var(t,e[t])),this.___inject_global_variable__()}___inject_global_variable__(){const t={console:console,setTimeout:setTimeout,setInterval:setInterval,clearTimeout:clearTimeout,clearInterval:clearInterval,encodeURI:encodeURI,encodeURIComponent:encodeURIComponent,decodeURI:decodeURI,decodeURIComponent:decodeURIComponent,escape:escape,unescape:unescape,Infinity:1/0,NaN:NaN,isFinite:isFinite,isNaN:isNaN,parseFloat:parseFloat,parseInt:parseInt,Object:Object,Function:Function,Boolean:Boolean,Error:Error,EvalError:EvalError,RangeError:RangeError,ReferenceError:ReferenceError,SyntaxError:SyntaxError,TypeError:TypeError,URIError:URIError,Number:Number,Math:Math,undefined:void 0,Date:Date,String:String,RegExp:RegExp,Array:Array,JSON:JSON,Promise:Promise,Symbol:Symbol,Set:Set,Map:Map};Object.keys(t).forEach(e=>this.__context__.const(e,t[e]))}execute(t){return"string"==typeof t&&(t=JSON.parse(t)),this.walk(t,this.__context__)}inject(t){t&&Object.keys(t).forEach(e=>this.__context__.var(e,t[e]))}getRootScope(){return this.__context__}runInScope(t,e){if(t instanceof r.default)return"string"==typeof e&&(e=JSON.parse(e)),this.walk(e,t);throw new Error("scope must be instance of Scope")}getVariable(t){return this.__context__.__get__(t)}reset(){const t=this.__context__.__get__("this");this.__context__=new r.default("root",null,[]),this.__callstack__=[],this.__context__.const("this",t),this.__inject_vars__&&Object.keys(this.__inject_vars__).forEach(t=>this.__context__.var(t,this.__inject_vars__&&this.__inject_vars__[t])),this.___inject_global_variable__()}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=n(1),i=n(0),a=n(4);e.default=class extends a.default{constructor(){super(),this.WalkCount=0}walk(t,e,...n){return this.WalkCount++,this[t.type](t,e,...n)}Program(t,e){for(const n of t.body)this.walk(n,e)}Identifier(t,e){return e.__get__(t.name)}Literal(t,e){return t.regex?new RegExp(t.regex.pattern,t.regex.flags):t.value}BlockStatement(t,e){let n=new i.default("block",e);for(const e of t.body){const t=this.walk(e,n);if(this.isBreakSignal(t)||this.isContinueSignal(t)||this.isReturnSignal(t))return t}}EmptyStatement(t,e){}DebuggerStatement(t,e){}ExpressionStatement(t,e){this.walk(t.expression,e)}ReturnStatement(t,e){return this.createReturnSignal(t.argument?this.walk(t.argument,e):void 0)}LabeledStatement(t,e){throw`${t.type} 未实现`}BreakStatement(t,e){return this.createBreakSignal()}ContinueStatement(t,e){return this.createContinueSignal()}IfStatement(t,e){return this.walk(t.test,e)?this.walk(t.consequent,e):t.alternate?this.walk(t.alternate,e):void 0}SwitchStatement(t,e){const n=this.walk(t.discriminant,e),r=new i.default("switch",e);let a=!1;for(const e of t.cases)if(a||e.test&&n!==this.walk(e.test,r)||(a=!0),a){const t=this.walk(e,r);if(this.isBreakSignal(t))break;if(this.isContinueSignal(t)||this.isReturnSignal(t))return t}}SwitchCase(t,e){for(const n of t.consequent){const t=this.walk(n,e);if(this.isBreakSignal(t)||this.isContinueSignal(t)||this.isReturnSignal(t))return t}}WithStatement(t,e){throw SyntaxError("Strict mode code may not include a with statement")}ThrowStatement(t,e){throw this.walk(t.argument,e)}TryStatement(t,e){try{return this.walk(t.block,new i.default("try",e))}catch(n){if(t.handler){const r=t.handler.param,a=new i.default("catch",e);return a.const(r.name,n),this.walk(t.handler,a)}throw n}finally{if(t.finalizer){const n=this.walk(t.finalizer,new i.default("finally",e));if(this.isReturnSignal(n))return n}}}CatchClause(t,e){return this.walk(t.body,e)}WhileStatement(t,e){for(;this.walk(t.test,e);){const n=new i.default("while",e),r=this.walk(t.body,n);if(this.isBreakSignal(r))break;if(!this.isContinueSignal(r)&&this.isReturnSignal(r))return r}}DoWhileStatement(t,e){do{const n=new i.default("dowhile",e),r=this.walk(t.body,n);if(this.isBreakSignal(r))break;if(!this.isContinueSignal(r)&&this.isReturnSignal(r))return r}while(this.walk(t.test,e))}ForStatement(t,e){const n=[];t.init&&t.init.type&&"VariableDeclaration"===t.init.type&&"let"===t.init.kind&&t.init.declarations.forEach(t=>{t.id.name&&n.push(t.id.name)});const r=new i.default("for",e);for(t.init&&this.walk(t.init,r);!t.test||this.walk(t.test,r);t.update?this.walk(t.update,r):void 0){const e=new i.default("for_body",r),a=this.walk(t.body,e);if(n.forEach(t=>e.let(t,r.__get__(t))),this.isBreakSignal(a))break;if(!this.isContinueSignal(a)&&this.isReturnSignal(a))return a}}ForInStatement(t,e){let n,r="var";"Identifier"===t.left.type?n=t.left.name:(n=t.left.declarations[0].id.name,r=t.left.kind);for(const a in this.walk(t.right,e)){const o=new i.default("forin",e);o[r](n,a);const s=this.walk(t.body,o);if(this.isBreakSignal(s))break;if(!this.isContinueSignal(s)&&this.isReturnSignal(s))return s}}FunctionDeclaration(t,e){const n=this.FunctionExpression(t,e);let r="";if(!(t&&t.id&&t.id.name))throw new SyntaxError("Function must have a name as its identifier");r=t.id.name,e.function(r,n)}FunctionExpression(t,e){const n=this,r=function(...a){const o=new i.default("function",e);for(let e=0;e<t.params.length;e++){const{name:n}=t.params[e];o.var(n,a[e])}o.const("this",this),o.const("arguments",arguments);let s="";t&&t.id&&t.id.name&&(s=t.id.name,o.function(s,r));const _=n.walk(t.body,o);if(n.isReturnSignal(_))return _.data};return r}VariableDeclaration(t,e){const n=t.kind;for(const i of t.declarations){if("const"===n&&!i.init)throw new SyntaxError("Missing initializer in const declaration");const{name:t}=i.id,a=null===i.init?r.default.NON_EXISTENT_INIT:this.walk(i.init,e);e[n](t,a)}}VariableDeclarator(t,e){}ThisExpression(t,e){return e.__has_variable_in_chain__("this")?e.__get__("this"):null}ArrayExpression(t,e){const n=[];return t.elements.forEach(t=>{n.push(this.walk(t,e,n))}),n}ObjectExpression(t,e){const n={},r={},i={};t.properties.forEach(t=>this.walk(t,e,n,r,i));const a=Object.keys(r),o=Object.keys(i);if(0!==a.length||0!==o.length){const t=[...new Set(a.concat(...o))];for(let e=0;e<t.length;e++)Object.defineProperty(n,t[e],{set:i[t[e]],get:r[t[e]]})}return n}Property(t,e,n,r,i){const a=t.kind;let o;if("Literal"===t.key.type)o=t.key.value;else{if("Identifier"!==t.key.type)throw new Error("Key of object must be Literal or Identifier, please check your code of ObjectExpression");o=t.key.name}const s=this.walk(t.value,e);if("init"===a)n[o]=s;else if("set"===a)i[o]=s;else{if("get"!==a)throw new Error("声明对象的属性必须为初始化，getter或者setter，请检查你对象声明的表达式");r[o]=s}}SpreadElement(t,e,n){const r=this.walk(t.argument,e);if(Array.isArray(n)){if(!r[Symbol.iterator]||"function"!=typeof r[Symbol.iterator])throw TypeError(`${r} is not iterable`);{const t=r[Symbol.iterator]();let e;for(;!(e=t.next()).done;)n.push(e.value)}}else"object"==typeof n&&Object.assign(n,r)}UnaryExpression(t,e){const n=this,r=t=>typeof t;return{"-":()=>-this.walk(t.argument,e),"+":()=>+this.walk(t.argument,e),"!":()=>!this.walk(t.argument,e),"~":()=>~this.walk(t.argument,e),void:()=>void this.walk(t.argument,e),typeof:()=>{if("Identifier"===t.argument.type)return e.__has_variable_in_chain__(t.argument.name)?r(n.walk(t.argument,e)):"undefined";if("MemberExpression"===t.argument.type){const{object:i,property:a,computed:o}=t.argument;return r(o?n.walk(i,e)[n.walk(a,e)]:n.walk(i,e)[a.name])}return r(n.walk(t.argument,e))},delete:()=>{if("MemberExpression"===t.argument.type){const{object:n,property:r,computed:i}=t.argument;return i?delete this.walk(n,e)[this.walk(r,e)]:delete this.walk(n,e)[r.name]}if("Identifier"===t.argument.type)throw new SyntaxError("Uncaught SyntaxError: Delete of an unqualified identifier in strict mode.");return!0}}[t.operator]()}UpdateExpression(t,e){const{prefix:n,operator:r}=t;if("Identifier"===t.argument.type){const{name:i}=t.argument;let a=e.__get__(i);return"++"===r?(e.__set__(i,a+1),n?++a:a++):(e.__set__(i,a-1),n?--a:a--)}if("MemberExpression"===t.argument.type){const i=t.argument,a=this.walk(i.object,e);let o=i.computed?this.walk(i.property,e):i.property.name;return"++"===r?n?++a[o]:a[o]++:n?--a[o]:a[o]--}{let i=this.walk(t.argument,e);return"++"===r?n?++i:i++:n?--i:i--}}BinaryExpression(t,e){return{"==":(t,e)=>t==e,"!=":(t,e)=>t!=e,"===":(t,e)=>t===e,"!==":(t,e)=>t!==e,"<":(t,e)=>t<e,"<=":(t,e)=>t<=e,">":(t,e)=>t>e,">=":(t,e)=>t>=e,"<<":(t,e)=>t<<e,">>":(t,e)=>t>>e,">>>":(t,e)=>t>>>e,"+":(t,e)=>t+e,"-":(t,e)=>t-e,"*":(t,e)=>t*e,"/":(t,e)=>t/e,"%":(t,e)=>t%e,"|":(t,e)=>t|e,"^":(t,e)=>t^e,"&":(t,e)=>t&e,in:(t,e)=>t in e,instanceof:(t,e)=>t instanceof e}[t.operator](this.walk(t.left,e),this.walk(t.right,e))}AssignmentExpression(t,e){let n;if("Identifier"===t.left.type){const{name:r}=t.left;n={$set(t){e.__set__(r,t)},$get:()=>e.__get__(r)}}else{if("MemberExpression"!==t.left.type)throw"赋值表达式的左边的类型只能是Identifier或者MemberExpression，此处显然不正确";{const r=t.left,i=this.walk(r.object,e);let a=r.computed?this.walk(r.property,e):r.property.name;n={$set(t){i[a]=t},$get:()=>i[a]}}}return{"=":t=>(n.$set(t),t),"+=":t=>(n.$set(n.$get()+t),n.$get()),"-=":t=>(n.$set(n.$get()-t),n.$get()),"*=":t=>(n.$set(n.$get()*t),n.$get()),"/=":t=>(n.$set(n.$get()/t),n.$get()),"%=":t=>(n.$set(n.$get()%t),n.$get()),"<<=":t=>(n.$set(n.$get()<<t),n.$get()),">>=":t=>(n.$set(n.$get()>>t),n.$get()),">>>=":t=>(n.$set(n.$get()>>>t),n.$get()),"|=":t=>(n.$set(n.$get()|t),n.$get()),"^=":t=>(n.$set(n.$get()^t),n.$get()),"&=":t=>(n.$set(n.$get()&t),n.$get())}[t.operator](this.walk(t.right,e))}LogicalExpression(t,e){return{"||":()=>this.walk(t.left,e)||this.walk(t.right,e),"&&":()=>this.walk(t.left,e)&&this.walk(t.right,e)}[t.operator]()}MemberExpression(t,e){const{object:n,property:r,computed:i}=t;return i?this.walk(n,e)[this.walk(r,e)]:this.walk(n,e)[r.name]}ConditionalExpression(t,e){return this.walk(t.test,e)?this.walk(t.consequent,e):this.walk(t.alternate,e)}CallExpression(t,e){const n=t.arguments.map(t=>this.walk(t,e));return"MemberExpression"===t.callee.type?this.walk(t.callee.object,e)[t.callee.computed?this.walk(t.callee.property,e):t.callee.property.name](...n):this.walk(t.callee,e)(...n)}NewExpression(t,e){const n=this.walk(t.callee,e),r=t.arguments.map(t=>this.walk(t,e));return new(n.bind.apply(n,[null].concat(r)))}SequenceExpression(t,e){let n;for(const r of t.expressions)n=this.walk(r,e);return n}ClassDeclaration(t,e){throw`${t.type} 未实现`}ClassExpression(t,e){throw`${t.type} 未实现`}ClassBody(t,e){throw`${t.type} 未实现`}Super(t,e){throw`${t.type} 未实现`}MethodDefinition(t,e){throw`${t.type} 未实现`}TemplateLiteral(t,e){throw`${t.type} 未实现`}TemplateElement(t,e){throw`${t.type} 未实现`}TaggedTemplateExpression(t,e){throw`${t.type} 未实现`}ObjectPattern(t,e){throw`${t.type} 未实现`}AssignmentPattern(t,e){throw`${t.type} 未实现`}ArrayPattern(t,e){throw`${t.type} 未实现`}RestElement(t,e){throw`${t.type} 未实现`}MetaProperty(t,e){throw`${t.type} 未实现`}AwaitExpression(t,e){throw`${t.type} 未实现`}ForOfStatement(t,e){throw`${t.type} 未实现`}YieldExpression(t,e){throw`${t.type} 未实现`}ArrowFunctionExpression(t,e){throw`${t.type} 未实现`}AssignmentProperty(t,e){throw`${t.type} 未实现`}ImportDeclaration(t,e){throw`${t.type} 未实现`}ImportSpecifier(t,e){throw`${t.type} 未实现`}ImportDefaultSpecifier(t,e){throw`${t.type} 未实现`}ImportNamespaceSpecifier(t,e){throw`${t.type} 未实现`}ExportSpecifier(t,e){throw`${t.type} 未实现`}ExportNamedDeclaration(t,e){throw`${t.type} 未实现`}ExportDefaultDeclaration(t,e){throw`${t.type} 未实现`}ExportAllDeclaration(t,e){throw`${t.type} 未实现`}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{constructor(){this.BREAK_SIGNAL={},this.CONTINUE_SIGNAL={},this.RETURN_SIGNAL={}}createBreakSignal(){return this.BREAK_SIGNAL}createContinueSignal(){return this.CONTINUE_SIGNAL}createReturnSignal(t){return{signal:this.RETURN_SIGNAL,data:t}}isBreakSignal(t){return t===this.BREAK_SIGNAL}isContinueSignal(t){return t===this.CONTINUE_SIGNAL}isReturnSignal(t){return!!t&&t.signal===this.RETURN_SIGNAL}}}])});